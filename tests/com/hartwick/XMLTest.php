<?php
/* 
 * Copyright (C) 2016 Michael J. Hartwick <hartwick at hartwick.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
namespace com\hartwick;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-05-20 at 16:40:49.
 */
class XMLTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var XML
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new XML("reply", null, null);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers com\hartwick\XML::addDebug
     * @todo   Implement testAddDebug().
     */
    public function testAddDebug()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers com\hartwick\XML::addError
     * @todo   Implement testAddError().
     */
    public function testAddError()
    {
			$expected = new \DOMDocument;
			$expected->loadXML('<?xml version="1.0" encoding="utf-8"?><!DOCTYPE hcc><hcc><reply><error value="No error" errno="1" error="Failed" /></reply></hcc>');
			$this->object->addError("No error", "1", "Failed");
			$this->assertXmlStringEqualsXmlString($expected->saveXML(), $this->object->assemble());
    }

    /**
     * @covers com\hartwick\XML::addId
     * @todo   Implement testAddId().
     */
    public function testAddId()
    {
			$expected = new \DOMDocument;
			$expected->loadXML('<?xml version="1.0" encoding="utf-8"?><!DOCTYPE hcc><hcc><reply><id value="1.0" readonly="true" /></reply></hcc>');
			$this->object->addId("1.0", "true");
			$this->assertXmlStringEqualsXmlString($expected->saveXML(), $this->object->assemble());
    }

    /**
     * @covers com\hartwick\XML::addVersion
     * @todo   Implement testAddVersion().
     */
    public function testAddVersion()
    {
			$expected = new \DOMDocument;
			$expected->loadXML('<?xml version="1.0" encoding="utf-8"?><!DOCTYPE hcc><hcc><reply><version software="1.0" schema="1" /></reply></hcc>');
			$this->object->addVersion("1.0", "1");
			$this->assertXmlStringEqualsXmlString($expected->saveXML(), $this->object->assemble());
    }

    /**
     * @covers com\hartwick\XML::addData
     * @todo   Implement testAddData().
     */
    public function testAddData()
    {
			$expected = new \DOMDocument;
			$expected->loadXML('<?xml version="1.0" encoding="utf-8"?><!DOCTYPE hcc><hcc><reply><test name="value"><subtest name="value" /></test></reply></hcc>');
			$data['name'] = "value";
			$nested[0]['element'] = "subtest";
			$nested[0]['name'] = "value";
			$this->object->addData("test", $data, $nested);
			$this->assertXmlStringEqualsXmlString($expected->saveXML(), $this->object->assemble());
    }

    /**
     * @covers com\hartwick\XML::assemble
     * @todo   Implement testAssemble().
     */
    public function testAssemble()
    {
			$expected = new \DOMDocument;
			$expected->loadXML('<?xml version="1.0" encoding="utf-8"?><!DOCTYPE hcc><hcc><reply/></hcc>');
			$this->assertXmlStringEqualsXmlString($expected->saveXML(), $this->object->assemble());
    }
}
